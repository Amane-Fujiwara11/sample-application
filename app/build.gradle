plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.graalvm.buildtools.native' version '0.9.24'
	id 'com.arenagod.gradle.MybatisGenerator' version '1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

//java {
//	sourceCompatibility = '17'
//}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	mybatisGenerator
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
	implementation 'org.springframework.modulith:spring-modulith-starter-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.2'
	testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.modulith:spring-modulith-bom:1.0.0'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

mybatisGenerator {
	verbose = true
	// 設定ファイル
	configFile = 'src/main/resources/generatorConfig.xml'

	// 依存関係
	dependencies {
		mybatisGenerator project(':')
	}
}